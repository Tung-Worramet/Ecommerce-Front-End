import React, { useState, useEffect } from "react";
import useEcomStore from "../../store/ecom-store";
import { createProduct, deleteProduct } from "../../api/product";
import { toast } from "react-toastify";
import UploadFile from "./UploadFile";
import { Link } from "react-router-dom";
import { Pencil, Trash } from "lucide-react";
import { numberFormat } from "../../utils/number";
import { dateFormat } from "../../utils/dateformat";

// ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ reset
const initialState = {
  title: "",
  description: "",
  price: "",
  quantity: "",
  categoryId: "",
  images: [],
};

// ‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ pages/admin/Product
const FormProduct = () => {
  // token, getCategory ‡∏°‡∏≤‡∏à‡∏≤‡∏Å globle state
  const token = useEcomStore((state) => state.token); // useEcomStore ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• token ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô localstorage

  const getCategory = useEcomStore((state) => state.getCategory); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getCategory
  const categories = useEcomStore((state) => state.categories); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ categories

  // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ State redender ‡∏Ñ‡∏∑‡∏≠ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ó‡∏∏‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏¥‡πâ‡∏á
  const [form, setForm] = useState({
    title: "",
    description: "",
    price: null,
    quantity: null,
    categoryId: "",
    images: [],
  });

  const getProduct = useEcomStore((state) => state.getProduct);
  const products = useEcomStore((state) => state.products);

  useEffect(() => {
    getCategory();
    getProduct(100);
  }, []);
  //   console.log(products);

  const handleOnChange = (e) => {
    // console.log(e.target.name, e.target.value);
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
    try {
      const res = await createProduct(token, form);
      setForm(initialState); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô form ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      getProduct(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• products ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å API
      toast.success(`Add ${res.data.title} success`);
    } catch (err) {
      console.log("Err handleSubmit", err);
    }
  };

  const handleDelete = async (id) => {
    // window.confirm ‡πÄ‡∏õ‡πá‡∏ô javascript ‡∏Ç‡∏≠‡∏á windows
    if (window.confirm("Are you sure you want to delete")) {
      try {
        const res = await deleteProduct(token, id);
        toast.success(res.data);
        getProduct(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• products ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å API
      } catch (err) {
        console.log("Err handleDelete", err);
      }
    }
  };

  return (
    <div className="container mx-auto p-6 bg-white shadow-lg rounded-lg mt-3">
      <h1 className="text-2xl font-bold text-gray-700 mb-4">üì¶ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>

      {/* ‚úÖ Form ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
      <form onSubmit={handleSubmit} className="space-y-4">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <input
            className="border px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={form.title}
            onChange={handleOnChange}
            placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            name="title"
          />

          <input
            className="border px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={form.price}
            onChange={handleOnChange}
            placeholder="‡∏£‡∏≤‡∏Ñ‡∏≤"
            name="price"
            type="number"
          />

          <input
            className="border px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={form.quantity}
            onChange={handleOnChange}
            placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            name="quantity"
            type="number"
          />
          <select
            className="border px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            name="categoryId"
            onChange={handleOnChange}
            required
            value={form.categoryId}
          >
            <option value="" disabled>
              ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            </option>
            {categories.map((item, index) => (
              <option key={index} value={item.id}>
                {item.name}
              </option>
            ))}
          </select>
        </div>

        <textarea
          className="border px-4 py-2 rounded-lg w-full focus:outline-none focus:ring-2 focus:ring-blue-500"
          value={form.description}
          onChange={handleOnChange}
          placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
          name="description"
          rows="3"
        />

        <hr className="my-4" />

        {/* ‚úÖ Upload ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
        <UploadFile form={form} setForm={setForm} />

        <button
          type="submit"
          className="w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition flex items-center justify-center gap-2"
        >
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        </button>
      </form>

      <hr className="my-6" />

      {/* ‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
      <div className="overflow-x-auto">
        <table className="table-auto w-full border-collapse border border-gray-300">
          <thead>
            <tr className="bg-gray-200">
              <th className="p-2 border">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
              <th className="p-2 border">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</th>
              <th className="p-2 border">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
              <th className="p-2 border">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
              <th className="p-2 border">‡∏£‡∏≤‡∏Ñ‡∏≤</th>
              <th className="p-2 border">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
              <th className="p-2 border">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢</th>
              <th className="p-2 border">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</th>
              <th className="p-2 border">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody>
            {products.map((item, index) => (
              <tr
                key={index}
                className="border hover:bg-gray-50 transition text-center"
              >
                <td className="p-2 ">{index + 1}</td>
                <td className="p-2 h-24 align-middle text-center">
                  {item.images.length > 0 ? (
                    <img
                      className="w-24 h-24 rounded-lg shadow-md object-cover"
                      src={item.images[0].url}
                      alt={item.title}
                    />
                  ) : (
                    <div className="w-24 h-24 bg-gray-200 rounded-lg flex items-center justify-center shadow-md">
                      No Image
                    </div>
                  )}
                </td>
                <td className="p-2">{item.title}</td>
                <td className="p-2 truncate max-w-sm ">{item.description}</td>
                <td className="p-2">{numberFormat(item.price)}</td>
                <td className="p-2">{item.quantity}</td>
                <td className="p-2">{item.sold}</td>
                <td className="p-2">{dateFormat(item.updatedAt)}</td>
                <td className="p-2 h-24 align-middle flex gap-2 justify-center items-center">
                  <Link
                    to={`/admin/product/${item.id}`}
                    className="bg-yellow-400 text-white w-10 h-10 flex items-center justify-center rounded-md shadow-md hover:scale-105 transition"
                  >
                    <Pencil size={20} />
                  </Link>
                  <button
                    onClick={() => handleDelete(item.id)}
                    className="bg-red-500 text-white w-10 h-10 flex items-center justify-center rounded-md shadow-md hover:scale-105 transition"
                  >
                    <Trash size={20} />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>

    // standard
    // <div className="container mx-auto p-4 bg-white shadow-md rounded-md">
    //   <form onSubmit={handleSubmit}>
    //     <h1>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
    //     <input
    //       className="border"
    //       value={form.title}
    //       onChange={handleOnChange}
    //       placeholder="Title"
    //       name="title"
    //     />
    //     <input
    //       className="border"
    //       value={form.description}
    //       onChange={handleOnChange}
    //       placeholder="Description"
    //       name="description"
    //     />
    //     <input
    //       className="border"
    //       value={form.price}
    //       onChange={handleOnChange}
    //       placeholder="Price"
    //       name="price"
    //       type="number"
    //     />
    //     <input
    //       className="border"
    //       value={form.quantity}
    //       onChange={handleOnChange}
    //       placeholder="Quantity"
    //       name="quantity"
    //       type="number"
    //     />
    //     <select
    //       className="border"
    //       name="categoryId"
    //       onChange={handleOnChange}
    //       required
    //       value={form.categoryId}
    //     >
    //       <option value="" disabled>
    //         Please Select
    //       </option>
    //       {categories.map((item, index) => (
    //         // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î value ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏≠‡∏≤ id
    //         <option key={index} value={item.id}>
    //           {item.name}
    //         </option>
    //       ))}
    //     </select>
    //     <hr />

    //     {/* Upload file */}
    //     {/* form={form} setForm={setForm} ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á props ‡πÑ‡∏õ‡πÉ‡∏´‡πâ UploadFile ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤ = ‡∏Ñ‡∏∑‡∏≠ form setForm ‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏ô {} ‡∏Ñ‡∏∑‡∏≠ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ */}
    //     <UploadFile form={form} setForm={setForm} />

    //     <button className="bg-blue-500 p-2 rounded-md shadow-md hover:scale-110 hover:-translate-y-1 hover:duration-500">
    //       ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    //     </button>
    //   </form>
    //   <hr />
    //   <br />
    //   <table className="table w-full text-center border">
    //     <thead>
    //       <tr className="bg-gray-200 border">
    //         <th scope="col">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
    //         <th scope="col">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</th>
    //         <th scope="col">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
    //         <th scope="col">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
    //         <th scope="col">‡∏£‡∏≤‡∏Ñ‡∏≤</th>
    //         <th scope="col">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
    //         <th scope="col">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢</th>
    //         <th scope="col">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï</th>
    //         <th scope="col">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
    //       </tr>
    //     </thead>
    //     <tbody>
    //       {products.map((item, index) => (
    //         <tr key={index}>
    //           <th scope="row">{index + 1}</th>
    //           <td>
    //             {item.images.length > 0 ? (
    //               <img
    //                 className="w-24 h-24 rounded-lg shadow-md"
    //                 src={item.images[0].url}
    //               />
    //             ) : (
    //               <div className="w-24 h-24 bg-gray-200 rounded-lg flex items-center justify-center shadow-md">
    //                 No Image
    //               </div>
    //             )}
    //           </td>
    //           <td>{item.title}</td>
    //           <td>{item.description}</td>
    //           <td>{numberFormat(item.price)}</td>
    //           <td>{item.quantity}</td>
    //           <td>{item.sold}</td>
    //           <td>{dateFormat(item.updatedAt)}</td>
    //           <td className="flex gap-2">
    //             <p className="bg-yellow-400 rounded-md p-1 shadow-md hover:scale-110 hover:-translate-y-1 hover:duration-500">
    //               <Link to={"/admin/product/" + item.id}>
    //                 <Pencil />
    //               </Link>
    //             </p>
    //             <p
    //               className="bg-red-500 rounded-md p-1 shadow-md hover:scale-110 hover:-translate-y-1 hover:duration-500"
    //               onClick={() => handleDelete(item.id)}
    //             >
    //               <Trash />
    //             </p>
    //           </td>
    //         </tr>
    //       ))}
    //     </tbody>
    //   </table>
    // </div>

    // ‡πÅ‡∏ï‡πà‡∏á css
    // <div className="container mx-auto p-6 bg-gray-100">
    //   {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
    //   <form
    //     onSubmit={handleSubmit}
    //     className="bg-white rounded-lg shadow-md p-6 space-y-4"
    //   >
    //     <h1 className="text-2xl font-bold text-gray-800">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
    //     <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
    //       {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
    //       <div>
    //         <label className="block text-gray-700 font-medium mb-1">
    //           ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    //         </label>
    //         <input
    //           type="text"
    //           name="title"
    //           value={form.title}
    //           onChange={handleOnChange}
    //           className="w-full border rounded-md p-2"
    //           placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
    //         />
    //       </div>

    //       {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
    //       <div>
    //         <label className="block text-gray-700 font-medium mb-1">
    //           ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    //         </label>
    //         <select
    //           name="category"
    //           value={form.category}
    //           onChange={handleOnChange}
    //           className="w-full border rounded-md p-2"
    //         >
    //           <option value="" disabled>
    //             ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    //           </option>
    //           {categories.map((category) => (
    //             <option key={category.id} value={category.id}>
    //               {category.name}
    //             </option>
    //           ))}
    //         </select>
    //       </div>

    //       {/* ‡∏£‡∏≤‡∏Ñ‡∏≤ */}
    //       <div>
    //         <label className="block text-gray-700 font-medium mb-1">‡∏£‡∏≤‡∏Ñ‡∏≤</label>
    //         <input
    //           type="number"
    //           name="price"
    //           value={form.price}
    //           onChange={handleOnChange}
    //           className="w-full border rounded-md p-2"
    //           placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤"
    //         />
    //       </div>

    //       {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
    //       <div>
    //         <label className="block text-gray-700 font-medium mb-1">
    //           ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    //         </label>
    //         <input
    //           type="number"
    //           name="quantity"
    //           value={form.quantity}
    //           onChange={handleOnChange}
    //           className="w-full border rounded-md p-2"
    //           placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
    //         />
    //       </div>

    //       {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
    //       <div className="md:col-span-2">
    //         <label className="block text-gray-700 font-medium mb-1">
    //           ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    //         </label>
    //         <textarea
    //           name="description"
    //           value={form.description}
    //           onChange={handleOnChange}
    //           className="w-full border rounded-md p-2"
    //           placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
    //           rows="3"
    //         />
    //       </div>
    //     </div>

    //     <UploadFile form={form} setForm={setForm} />
    //     <button className="w-full bg-blue-500 text-white font-semibold p-3 rounded-md shadow-md hover:bg-blue-600 transition-all">
    //       ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    //     </button>
    //   </form>

    //   <hr className="my-6" />

    //   {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
    //   <h2 className="text-2xl font-bold text-gray-800 mb-4">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
    //   <div className="overflow-x-auto">
    //     <table className="table-auto w-full border-collapse bg-white rounded-lg shadow-md">
    //       <thead className="bg-blue-500 text-white">
    //         <tr>
    //           <th className="p-4 text-center rounded-tl-lg">#</th>
    //           <th className="p-4 text-center">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</th>
    //           <th className="p-4 text-center">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
    //           <th className="p-4 text-center">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
    //           <th className="p-4 text-center">‡∏£‡∏≤‡∏Ñ‡∏≤</th>
    //           <th className="p-4 text-center">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
    //           <th className="p-4 text-center">‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß</th>
    //           <th className="p-4 text-center">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï</th>
    //           <th className="p-4 text-center rounded-tr-lg">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
    //         </tr>
    //       </thead>
    //       <tbody>
    //         {products.map((item, index) => (
    //           <tr
    //             key={index}
    //             className="hover:bg-gray-100 transition-all border-b text-center"
    //           >
    //             {/* ‡∏•‡∏≥‡∏î‡∏±‡∏ö */}
    //             <td className="p-4">{index + 1}</td>

    //             {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
    //             <td className="p-4">
    //               <div className="w-16 h-16 bg-gray-200 rounded-lg flex items-center justify-center mx-auto">
    //                 {item.images.length > 0 ? (
    //                   <img
    //                     className="w-full h-full object-cover rounded-lg"
    //                     src={item.images[0].url}
    //                     alt={item.title}
    //                   />
    //                 ) : (
    //                   <span className="text-gray-500">No Image</span>
    //                 )}
    //               </div>
    //             </td>

    //             {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
    //             <td className="p-4">{item.title}</td>

    //             {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
    //             <td className="p-4">{item.description}</td>

    //             {/* ‡∏£‡∏≤‡∏Ñ‡∏≤ */}
    //             <td className="p-4 text-green-600 font-bold">‡∏ø{item.price}</td>

    //             {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô */}
    //             <td className="p-4">{item.quantity}</td>

    //             {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢ */}
    //             <td className="p-4 text-red-500">{item.sold}</td>

    //             {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï */}
    //             <td className="p-4 text-sm text-gray-500">{item.updatedAt}</td>

    //             {/* ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
    //             <td className="p-4 text-center">
    //               <div className="flex items-center justify-center gap-2">
    //                 <Link
    //                   to={`/admin/product/${item.id}`}
    //                   className="bg-yellow-500 text-white px-3 py-2 rounded-md hover:bg-yellow-600 hover:scale-105 transition-all flex items-center justify-center"
    //                 >
    //                   <Pencil />
    //                 </Link>
    //                 <button
    //                   onClick={() => handleDelete(item.id)}
    //                   className="bg-red-500 text-white px-3 py-2 rounded-md hover:bg-red-600 hover:scale-105 transition-all flex items-center justify-center"
    //                 >
    //                   <Trash />
    //                 </button>
    //               </div>
    //             </td>
    //           </tr>
    //         ))}
    //       </tbody>
    //     </table>
    //   </div>
    // </div>
  );
};

export default FormProduct;
